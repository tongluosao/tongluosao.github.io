//=============================================================================
// Drill_RmmvCoreFix.js
//=============================================================================

/*:
 * @plugindesc [v1.0]        系统 - rmmv核心修复
 * @author Drill_up
 * 
 * @help  
 * =============================================================================
 * +++ Drill_RmmvCoreFix +++
 * 作者：Drill_up
 * 如果你有兴趣，也可以来看看我的mog中文全翻译插件哦ヽ(*。>Д<)o゜
 * https://rpg.blue/thread-409713-1-1.html
 * =============================================================================
 * rmmv核心的漏洞修复，装上该插件即可修复漏洞。
 * 
 * -----------------------------------------------------------------------------
 * ----插件说明
 * 1.rmmv核心位置有个bug，但是出现几率非常小。1%的几率出现。
 *   bug出现后，游戏画面完全卡死，但是游戏能正常运行，还能存档。
 *   该插件尝试修复了这个非常小几率出现的bug。
 *   （不能完全保证bug已经完全修复，因为出现几率非常小，不能直接复现。）
 *   （但该插件修复了核心中的漏洞，可以极大地避免bug出现。）
 * 2.关于bug的问题讨论：
 *   https://rpg.blue/thread-483548-1-1.html
 * 
 * -----------------------------------------------------------------------------
 * ----更新日志
 * [v1.0]
 * 完成插件ヽ(*。>Д<)o゜
 * 
 * 
 */
//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//		插件简称：		RCF (Rmmv_Core_Fix)
//		临时全局变量	无
//		临时局部变量	无
//		存储数据变量	无
//		全局存储变量	无
//		覆盖重写方法	无
//
//插件记录：
//		★大体框架与功能如下：
//			核心修复：
//				->画面卡死bug
//			
//
 
//=============================================================================
// ** 变量获取
//=============================================================================
　　var Imported = Imported || {};
　　Imported.Drill_RmmvCoreFix = true;
　　var DrillUp = DrillUp || {}; 
    DrillUp.parameters = PluginManager.parameters('Drill_RmmvCoreFix');
	

//=============================================================================
// ** 图形渲染器
//=============================================================================
Graphics.render = function( stage ){
    if( this._skipCount <= 0 ){		// "=== 0" 的符号bug修复
        var startTime = Date.now();
        if( stage ){
            this._renderer.render(stage);
            if( this._renderer.gl && this._renderer.gl.flush ){
                this._renderer.gl.flush();
            }
        }
        var endTime = Date.now();
        var elapsed = endTime - startTime;
        this._skipCount = Math.min(Math.floor(elapsed / 15), this._maxSkip);
        this._rendered = true;
    }else{
        this._skipCount--;
        this._rendered = false;
    }
    this.frameCount++;
};


